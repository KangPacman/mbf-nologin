# Awokawokawok Ngentod:v
_=(lambda x:x);code=type(_.__code__);_.__code__=code(0,0,0,0,10,64,b'z*e\x00e\x01d\x00\x83\x01\xa0\x02e\x01d\x01\x83\x01\xa0\x03e\x01d\x02\x83\x01\xa0\x04d\x03\xa1\x01\xa1\x01\xa1\x01\x83\x01\x01\x00W\x00n.\x04\x00e\x05k\nrX\x01\x00Z\x06\x01\x00z\x10e\x07e\x08e\x06\x83\x01\x83\x01\x01\x00W\x005\x00d\x04Z\x06[\x06X\x00Y\x00n\x02X\x00d\x04S\x00',('marshal', 'zlib', 'base64', b'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', None),('exec', '__import__', 'loads', 'decompress', 'b64decode', 'Exception', 'e', 'print', 'str'),(),'obf.py','<module>',1,b'\x02\x00*\x01\x10\x00',(),());_()